{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sources/js/main.js","sources/js/modules/controller.js","sources/js/modules/model.js","sources/js/modules/view.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_controller","_model","_view","targetElement","document","getElementById","model","_model2","default","view","_view2","$elem","controller","_controller2","init","Controller","_classCallCheck","this","interval","keyCode","KEY","LEFT","dir","RIGHT","UP","DOWN","clearMatrix","startGame","cols","Math","floor","offsetWidth","matrix","y","rows","offsetHeight","x","addMatrix","min","max","rand","random","round","row","col","cellAddress","querySelectorAll","cell","getCellNode","classList","contains","removeFood","foodRow","randomInteger","foodCol","getCellSnake","setFood","drawSnake","drawFood","serNum","body","console","log","unshift","serialNumber","move","getAttribute","headCell","gameOver","clearInterval","onClickReload","bind","addRelaodBtn","that","setInterval","moveSnake","getFood","setCellSnake","pop","playscore","addPlayscore","createFood","gamePlay","onTapMovement","calculateRowsCols","Model","conf","View","k","div","createElement","add","setAttribute","appendChild","insert","toggle","button","innerText","addEventListener","remove","score","scoreEl","querySelector","span","btn","item"],"mappings":"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","file":"main.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Controller from './modules/controller';\r\nimport Model from './modules/model';\r\nimport View from './modules/view';\r\n\r\n\r\n\r\n\r\nlet targetElement = document.getElementById('poligon');\r\n\r\nlet model = new Model(),\r\n    view = new View({$elem: targetElement}),\r\n    controller = new Controller(view, model);\r\n    controller.init();\r\n","export default class Controller {\r\n    constructor(view, model) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.interval = null;\r\n    }\r\n\r\n    onTapMovement(e) {\r\n        if (e.keyCode == this.model.KEY.LEFT && this.model.dir != 'right') {\r\n            this.model.dir = 'left';\r\n        } else if (e.keyCode == this.model.KEY.RIGHT && this.model.dir != 'left') {\r\n            this.model.dir = 'right';\r\n        } else if (e.keyCode == this.model.KEY.UP && this.model.dir != 'down') {\r\n            this.model.dir = 'up';\r\n        } else if (e.keyCode == this.model.KEY.DOWN && this.model.dir != 'up') {\r\n            this.model.dir = 'down';\r\n        }\r\n    }\r\n\r\n    onClickReload(e) {\r\n        this.view.clearMatrix();\r\n        this.startGame();\r\n    }\r\n\r\n    calculateRowsCols() {\r\n        this.model.cols = Math.floor(this.view.$elem.offsetWidth / this.model.matrix.y);\r\n        this.model.rows = Math.floor(this.view.$elem.offsetHeight / this.model.matrix.x);\r\n        this.view.addMatrix(this.model.cols, this.model.rows);\r\n    }\r\n\r\n    randomInteger(min, max) {\r\n        let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n        return Math.round(rand);\r\n    }\r\n\r\n    getCellNode(row, col) {\r\n        let cellAddress = (row - 1) * this.model.cols + col - 1;\r\n        return this.view.$elem.querySelectorAll('.cell')[cellAddress];\r\n    }\r\n\r\n    getCellSnake(row, col) {\r\n        let cell = this.getCellNode(row, col);\r\n        if (cell && cell.classList.contains('snake')) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getFood(row, col) {\r\n        let cell = this.getCellNode(row, col);\r\n        if (cell && cell.classList.contains('food')) {\r\n            this.view.removeFood(cell);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    createFood() {\r\n        this.model.foodRow = this.randomInteger(1, this.model.rows);\r\n        this.model.foodCol = this.randomInteger(1, this.model.cols);\r\n\r\n        if (!this.getCellSnake(this.model.foodRow, this.model.foodCol)) {\r\n            this.setFood(this.model.foodRow, this.model.foodCol);\r\n        }\r\n    }\r\n\r\n    setCellSnake(row, col) {\r\n        let cell = this.getCellNode(row, col);\r\n        this.view.drawSnake(cell);\r\n    }\r\n\r\n    setFood(row, col) {\r\n        let cell = '';\r\n        if (this.getCellSnake(row, col)) {\r\n            cell = this.getCellNode(this.randomInteger(1, this.model.rows), this.randomInteger(1, this.model.cols));\r\n        } else {\r\n            cell = this.getCellNode(row, col);\r\n        }\r\n        this.view.drawFood(cell);\r\n\r\n    }\r\n\r\n    move(serNum) {\r\n        switch (this.model.dir) {\r\n            case 'left':\r\n                if (serNum.col <= 1) {\r\n                    this.model.body[0].y = this.model.cols;\r\n                } else {\r\n                    this.model.body[0].y = this.model.body[1].y - 1;\r\n                }\r\n                this.model.body[0].x = this.model.body[1].x;\r\n                break;\r\n\r\n            case 'right':\r\n                if (serNum.col >= this.model.cols) {\r\n                    this.model.body[0].y = 1;\r\n                } else {\r\n                    this.model.body[0].y = this.model.body[1].y + 1;\r\n                }\r\n                this.model.body[0].x = this.model.body[1].x;\r\n                break;\r\n\r\n            case 'up':\r\n                if (serNum.row <= 1) {\r\n                    this.model.body[0].x = this.model.rows;\r\n                } else {\r\n                    this.model.body[0].x = this.model.body[1].x - 1;\r\n                }\r\n                this.model.body[0].y = this.model.body[1].y;\r\n                break;\r\n\r\n            case 'down':\r\n                if (serNum.row >= this.model.rows) {\r\n                    this.model.body[0].x = 1;\r\n                } else {\r\n                    this.model.body[0].x = this.model.body[1].x + 1;\r\n                }\r\n                this.model.body[0].y = this.model.body[1].y;\r\n                break;\r\n\r\n            default:\r\n                console.log('default');\r\n        }\r\n    }\r\n\r\n    moveSnake() {\r\n        this.model.body.unshift({});\r\n        let serialNumber = this.serialNumber();\r\n        this.move(serialNumber);\r\n    }\r\n\r\n    serialNumber() {\r\n        let cell = this.getCellNode(this.model.body[1].x, this.model.body[1].y);\r\n        return {row: cell.getAttribute('data-row'), col: cell.getAttribute('data-column')};\r\n    }\r\n\r\n    gameOver() {\r\n        let headCell = this.getCellNode(this.model.body[1].x, this.model.body[1].y);\r\n        this.view.gameOver(headCell);\r\n        clearInterval(this.interval);\r\n        this.view.onClickReload = this.onClickReload.bind(this);\r\n        this.view.addRelaodBtn();\r\n    }\r\n\r\n    gamePlay() {\r\n        let that = this;\r\n        this.interval = setInterval(function () {\r\n            that.moveSnake();\r\n            if (!that.getFood(that.model.body[0].x, that.model.body[0].y)) {\r\n                that.setCellSnake(that.model.body[that.model.body.length - 1].x, that.model.body[that.model.body.length - 1].y);\r\n                that.model.body.pop();\r\n            } else {\r\n                that.model.playscore++;\r\n                that.view.addPlayscore(that.model.playscore);\r\n                that.createFood();\r\n            }\r\n            if (that.getCellSnake(that.model.body[0].x, that.model.body[0].y)) {\r\n                that.gameOver();\r\n                return;\r\n            }\r\n            that.setCellSnake(that.model.body[0].x, that.model.body[0].y);\r\n        }, that.model.interval);\r\n    }\r\n\r\n    startGame() {\r\n        this.model.body = [{x: 1, y: 3}, {x: 1, y: 2}, {x: 1, y: 1}];\r\n        this.model.dir = 'right';\r\n        this.model.playscore = 0;\r\n        this.setCellSnake(this.model.body[0].x, this.model.body[0].y);\r\n        this.setCellSnake(this.model.body[1].x, this.model.body[1].y);\r\n        this.setCellSnake(this.model.body[2].x, this.model.body[2].y);\r\n        this.gamePlay();\r\n        this.createFood();\r\n    }\r\n\r\n    init() {\r\n        this.view.onTapMovement = this.onTapMovement.bind(this);\r\n        this.calculateRowsCols();\r\n        this.startGame();\r\n    }\r\n}","export default class Model {\r\n    constructor(conf) {\r\n        this.interval = 100;\r\n        this.playscore = 0;\r\n        this.body = [{x: 1, y: 3}, {x: 1, y: 2}, {x: 1, y: 1}];\r\n        this.dir = 'right';\r\n        this.rows = 0;\r\n        this.cols = 0;\r\n        this.matrix = {x: 20, y: 20};\r\n        this.foodRow = 0;\r\n        this.foodCol = 0;\r\n        this.KEY = {\r\n            'LEFT': 37,\r\n            'RIGHT': 39,\r\n            'UP': 38,\r\n            'DOWN': 40\r\n        };\r\n    }\r\n}","export default class View {\r\n    constructor(conf) {\r\n        this.$elem = conf.$elem;\r\n        this.onTapMovement = null;\r\n        this.onClickReload = null;\r\n    }\r\n\r\n    addMatrix(cols, rows) {\r\n        for (let i = 1; i <= cols; i++) {\r\n            for (let k = 1; k <= rows; k++) {\r\n                let div = document.createElement('div');\r\n                div.classList.add('cell');\r\n                div.setAttribute('data-row', i);\r\n                div.setAttribute('data-column', k);\r\n                this.$elem.appendChild(div);\r\n            }\r\n        }\r\n        this.insert();\r\n    }\r\n\r\n    drawSnake(cell) {\r\n        cell.classList.toggle('snake');\r\n    }\r\n\r\n    drawFood(cell) {\r\n        cell.classList.toggle('food');\r\n    }\r\n\r\n    addRelaodBtn() {\r\n        let button = document.createElement('a');\r\n        button.classList.add('btn');\r\n        button.innerText = 'Начать сначала!';\r\n        this.$elem.appendChild(button);\r\n        button.addEventListener('click', this.onClickReload);\r\n    }\r\n\r\n    removeFood(cell) {\r\n        cell.classList.remove('food');\r\n    }\r\n\r\n    gameOver(headCell) {\r\n        headCell.classList.add('snake-error-head');\r\n    }\r\n\r\n    addPlayscore(score) {\r\n        let scoreEl = this.$elem.querySelector('.score');\r\n        if(!scoreEl) {\r\n            let span = document.createElement('span');\r\n            span.classList.add('score');\r\n            span.innerText = 'Результат:' + score;\r\n            this.$elem.appendChild(span);\r\n        } else {\r\n            scoreEl.innerText = 'Результат:' + score;\r\n        }\r\n    }\r\n\r\n    clearMatrix() {\r\n        let cell = this.$elem.querySelectorAll('.cell');\r\n        let btn = this.$elem.querySelector('.btn');\r\n        let scoreEl = this.$elem.querySelector('.score');\r\n\r\n        for (let i = 0; i < cell.length; i++) {\r\n            let item = cell[i];\r\n            if (item.classList.contains('snake') || item.classList.contains('food')) {\r\n                item.classList.remove('snake', 'food', 'snake-error-head');\r\n            }\r\n        }\r\n        scoreEl.remove();\r\n        btn.remove();\r\n    }\r\n\r\n    insert() {\r\n        document.addEventListener('keyup', this.onTapMovement);\r\n    }\r\n}"]}